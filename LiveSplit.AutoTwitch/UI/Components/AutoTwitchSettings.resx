<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABHdJREFUWEfVl39MlHUcx9943Oi8lE7yF0aWTBkROnY1Lc2cxYBskREDpxQFw6iu
        hq5ow2ZYmzTDZZHAlpGxWEh2EStbbk1dzQEmuyCIO/khijSN0mXEAQ+fPh/g6nLP3T33mGv98dp3z/O9
        +37e9/n5PRBRyH/J/08AAMOKRwtMTzY5E3JP9CXlHHcmptUcioPFEs57JsYon1H7rhqaBcihmS0DcTl9
        w1W5/cqlx88RbZriCSb37OjAxrbz5fEF2+L5syLGqHbOlWgSAKvV+HDPcFHaWcW95jTRkq5xmtPuphta
        h8jCa6RLodu7iRL7iB7qHRlcWlGbwQLmMmFq53kTUADS0w1z2of3iYGb2FDo8fOE6iOEkv2E4gpCaQ3B
        3kI4eZnMneMUy5+7wzXyq/nBjPumRPj1RGABNlsYyj6tRpmd8N5XhO17CY8V9OD+9XasTK7CA5l22HYM
        ouZbguMPuq6TaMEpIkt9Sx0b94TDZ04EFjCZVLORZavE0y+7sSqlip/zGXFzCpOI+Qs3oOT9C/jmJ0LH
        OJlYRGjzxX7eEy8sYHx6QYsAAzODicbiZet5FaP3MnFMFDOfieaQVOLYuQkBIQwafx7l92kTe1wdamcL
        2pLwbxFibOHUKs/iHcGM2sZCCYEImFgPdYqAjUys7KudK2gSIPAhIkKMhU2tf8VVnmc6LldPZ9ejXSEc
        6ye8Y5cQbGD+HQH+iDlyKj66S3Ff72QBJ38jfMBVsslWz4YlZBICn+V41QKsBw6H39k95riFM9/Q6iYc
        PEEoLL0Ak/l5Niy5IuHSn4T+sOblGVd2jdRLjzB1jBG+6CBsK3MjZlkpG5UEFPfPUPuuB90C+GDDCqd7
        V0IPUTg3IHzdS3jtXQXL1+znvSxmOTObubpG5ItYx6WUpd2KcqNLSm6Q8NbHhOT0BjaYw4jrpf59lp8H
        XQKQbAtb5BzrjHQRTWsbIdQ1EfJeamWDzzCJzK2MmQk4FXUJmN48uC6CjUvbRdMvhL0Nbsy7eTsbTGVi
        GOkRmkZy0ALkYO5yr4e2j1HID5x4UvM7Kh38XlwvcY/QalzQJ2Dfl1Uo/4ywp46w+yNC9lZPzS9mAsbd
        Gz0CjNhclMMT0Y7Mpw4jY/NRrEraye/vYfzWvBr6PDA5YiXWku1JjBiXX+939KqhKwnZiMwDCyPTUDJe
        Sk7zNcwbXQJSm1xRuT1De/J7hz7P+n5g16JHsj2//toLiPykMWJ1r3I6+QzRWr4Dynp3x+8OzJonbVe8
        cm1DENZ8MX+Wc5zvfzx8fiSayRNQnqe9UvECG/d7+VAjKAHy61DXWDxx9ZIewALQNko4eoawZefbvG9l
        wtW+64vgBby4ex3ePEBoaJ1sQge/I7zxoYLbEgp5XxpRUGEIXoAYyN5SjudeVbC1hPBs8SjWptbye7mk
        yi3Y7/i9kqBzgA3I368oLIlPhXV1ESLmygBKZ+5ipBEF/DPijR4B4gWZdFL7cjNOYKQCxLimCehN0AIE
        McJIMxKDUv+y/uOiqg0K+RPUobsOGmf/pwAAAABJRU5ErkJggg==
</value>
  </data>
</root>